<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>SmartScheduler</title>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/css/bootstrap.min.css" rel="stylesheet" integrity="sha384-QWTKZyjpPEjISv5WaRU9OFeRpok6YctnYmDr5pNlyT2bRjXh0JMhjY6hW+ALEwIH" crossorigin="anonymous">
</head>
<body>
    <div class="container">
        <%- include('header') %>
        <h1>Home</h1>
        <!-- Button to generate timetable -->
        <button id="generate-timetable-btn" class="btn btn-primary">Generate Timetable</button>
        <!-- Button to store timetable -->
        <button id="store-timetable-btn" class="btn btn-success mt-3">Store Timetable</button>
        <!-- Div to display the generated timetable -->
        <div id="timetable-display" class="mt-4"></div>
    </div>
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/js/bootstrap.bundle.min.js" integrity="sha384-YvpcrYf0tY3lHB60NNkmXc5s9fDVZLESaAA55NDzOxhy9GkcIdslK1eN7N6jIeHz" crossorigin="anonymous"></script>
    <script>
        let generatedTimetable = null;

        // Event listener to generate the timetable
        document.getElementById('generate-timetable-btn').addEventListener('click', function() {
            fetch('/timetable/generate')
                .then(response => response.json())
                .then(data => {
                    generatedTimetable = data;
                    const timetableDisplay = document.getElementById('timetable-display');
                    timetableDisplay.innerHTML = generateTimetableHTML(data);
                })
                .catch(error => {
                    console.error('Error fetching timetable:', error);
                });
        });

        // Event listener to store the generated timetable
        document.getElementById('store-timetable-btn').addEventListener('click', function() {
            if (generatedTimetable) {
                fetch('/timetable/store', {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json'
                    },
                    body: JSON.stringify({ timetable: generatedTimetable })
                })
                .then(response => {
                    if (response.ok) {
                        alert('Timetable stored successfully!');
                    } else {
                        alert('Failed to store the timetable.');
                    }
                })
                .catch(error => {
                    console.error('Error storing timetable:', error);
                });
            } else {
                alert('Please generate the timetable first.');
            }
        });

        // Function to generate HTML for the timetable
        function generateTimetableHTML(timetable) {
            let html = '<div class="table-responsive">';
            
            // Loop through departments (e.g., MCA)
            for (const [department, semesters] of Object.entries(timetable)) {
                html += `<h2>Department: ${department}</h2>`;

                // Loop through semesters (e.g., 1, 2, 3)
                for (const [semester, days] of Object.entries(semesters)) {
                    html += `<h3>Semester: ${semester}</h3>`;
                    html += '<table class="table table-bordered">';
                    html += '<thead><tr><th>Day</th>';

                    // Generate hour headers
                    const hours = Array.from({ length: 7 }, (_, i) => i + 1);
                    hours.forEach(hour => {
                        html += `<th>Hour ${hour}</th>`;
                    });

                    html += '</tr></thead><tbody>';

                    // Loop through days (Monday to Friday)
                    for (const day of ['Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday']) {
                        html += `<tr><td>${day}</td>`;
                        
                        // Loop through periods (hours)
                        hours.forEach(hour => {
                            const details = days[day] && days[day][hour] ? days[day][hour] : {};
                            const course = details.Course || '';
                            const faculty = details.Faculty || '';
                            const classroom = details.Classroom || '';

                            html += `<td><strong>Course:</strong> ${course}<br><strong>Faculty:</strong> ${faculty}<br><strong>Classroom:</strong> ${classroom}</td>`;
                        });

                        html += '</tr>';
                    }

                    html += '</tbody></table>';
                }
            }
            html += '</div>';
            return html;
        }
    </script>
</body>
</html>
